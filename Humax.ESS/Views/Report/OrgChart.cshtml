@using Microsoft.AspNetCore.Mvc.Localization
@using Humax.ESS.Models
@model IEnumerable<OrgChartItemModel>
@inject IViewLocalizer T
@{
    ViewData["Title"] = T["Sơ đồ tổ chức"];
}

<script type="text/javascript">
    var currentEmployee = {};

    function itemTypeExpr(obj) {
        return "employee" + obj.Id;
    }

    function showInfo(employee) {
        currentEmployee = employee;

        var popup = $("#popup").dxPopup("instance");
        popup.option("contentTemplate", function () {
            return $("<div />").append(
                $("<p>Full Name: <b>" + currentEmployee.FullName + "</b></p>"),
                $("<p>Title: <b>" + currentEmployee.Title + "</b></p>")
            )
        });
        popup.show();
    }
</script>

<div class="sorting1">
    <div class="sorting1__row">
        <h1 class="sorting1__title title">@T["Sơ đồ tổ chức"]</h1>
    </div>
</div>

<div class="content-block">
    @(Html.DevExtreme().Diagram()
        .ID("diagram")
        .ReadOnly(true)
        .SimpleView(true)
        .ShowGrid(false)
        .ZoomLevel(0.75)
        .CustomShapes(cs => {
            foreach(var employee in Model) {
                cs.Add()
                    .Type("employee" + employee.Id)
                    .BaseType("rectangle")
                    .DefaultWidth(1.5)
                    .DefaultHeight(1)
                    .AllowEditText(false)
                    .AllowResize(false);
            }
        })
        .CustomShapeTemplate(@<text>
            <svg class="template">
                <text class="template-name" x="50%" y="20%"><%- dataItem.FullName %></text>
                <text class="template-title" x="50%" y="45%"><%- dataItem.Title %></text>
                <text class="template-button" x="50%" y="85%" onclick="showInfo(<%- JSON.stringify(dataItem) %>)">Show Details</text>
            </svg>
        </text>)
        .Nodes(ns => ns
            .DataSource(d => d
                .Array()
                .Key("Id")
                .Data(Model)
            )
            .KeyExpr("Id")
            .TypeExpr(new JS("itemTypeExpr"))
            .ParentKeyExpr("HeadId")
            .AutoLayout(al => al
                .Type(DiagramDataLayoutType.Tree)
            )
        )
    )

    @(Html.DevExtreme().Popup()
        .ID("popup")
        .Width(300)
        .Height(280)
        .ShowTitle(true)
        .Title("Information")
        .Visible(false)
        .DragEnabled(false)
        .CloseOnOutsideClick(true)
    )
</div>