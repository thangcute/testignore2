@using Microsoft.AspNetCore.Mvc.Localization
@using Humax.ESS.Models
@model LeaveSummaryModel
@inject IViewLocalizer T
@{
    ViewData["Title"] = T["Nghỉ phép"];
    string errorMessage = null;
    if (ViewData["ErrorMessage"] != null)
        errorMessage = ViewData["ErrorMessage"].ToString();
}

<link href="~/css/devextreme/dx-site.css" rel="stylesheet" />
<script src="~/js/devextreme/dx-site.js" type="text/javascript"></script>

<script>
    function OpenPopup(_id, _title = '', _approve = 0) {
        var __title = _title != '' ? _title : '@T["Thêm mới quá trình nghỉ phép"]';
        var __url = '/Leave/Detail';
        var __popup = 'popup';
        var __data = {
            id: _id,
            approve: _approve
        };
        var __width = 500;
        var __offset = 55;

        FormDetail(_id, __title, __url, __popup, __data, __width, __offset);
    }

    // Hien thi html trang thai xet duyet
    function cellTempApproveStatus(container, options) {
        var _data = options.data;
        $("<div />").html(_data.ApproveStatusDisplay).appendTo(container);
    }

    // Sua thong tin
    function jsEdit(e) {
        var _data = e.row.data;
        var _Id = _data.Id;
        var _XetDuyet = _data.XetDuyet;
        if (typeof _XetDuyet == 'undefined' || _XetDuyet == null)
            _XetDuyet = 0;

        if (typeof _Id != 'undefined' && _Id > 0) {
            OpenPopup(_Id, 'Sửa thông tin nghỉ phép', _XetDuyet);
        } else
            toastr.warning("Không có thông tin chọn");
    }

    // Xoa thong tin
    function jsDelete(e) {
        // success-info-warning-error
        var _data = e.row.data;
        var _Id = _data.Id;
        var _XetDuyet = _data.XetDuyet;

        console.log(_Id + '-' + _XetDuyet);
        if (typeof _Id != 'undefined' && _Id > 0) {
            if (_XetDuyet == null || _XetDuyet == 0) {
                Confirm("Bạn muốn tiếp tục thực hiện thao tác ?").show().done(function (dialogResult) {
                    if (dialogResult.status) {
                        $.ajax({
                            url: '/Leave/Delete',
                            //contentType: "application/json",
                            dataType: "json",
                            type: 'POST',
                            async: false,
                            data: {
                                id: _Id
                            },
                            success: function (response, status, jqXHR) {
                                console.log(response);
                                if (response.success == 1) {
                                    toastr.success("Xóa Quan hệ Nhân thân thành công !");

                                    if ($('#gridContainer').length)
                                        $("#gridContainer").dxDataGrid('instance').refresh();
                                }
                                else
                                    toastr.warning(response.message);
                            },
                            error: function (jqXHR, status, err) {
                                toastr.warning("Lỗi xử lý !");
                            },
                            complete: function (jqXHR, status) {
                            }
                        });
                    } else
                        toastr.warning("Bạn đã hủy thao táo");
                });
            } else
                toastr.warning("Bạn không thể xóa dữ liệu này");
        } else
            toastr.warning("Không có thông tin chọn");
    }
</script>

<div class="sorting1">
    <div class="sorting1__row">
        <h1 class="sorting1__title title">@T["Quản lý nghỉ phép"]</h1>
        @if (!string.IsNullOrEmpty(errorMessage))
        {
            <div class="error-messsage">@errorMessage</div>
        }
        <div class="sorting1__options">
            <div class="sorting1__search js-sorting-search">
                <button class="group__btn btn btn_blue" onclick="OpenPopup(0, '');">
                    <i class="icon dx-icon-add"></i> @T["Đăng ký"]
                </button>
            </div>
        </div>
    </div>

    <div class="leave-summary">
        <div class="sub-title">@T["Tổng hợp ngày nghỉ của tôi"]:</div>
        <div class="items">
            <div class="item">
                <div class="icon indigo"></div><div class="label">@T["Phép năm"]:</div><div class="value">@(Model.SoPhepTheoQuyDinh.ToString("n2"))</div>
            </div>
            <div class="item">
                <div class="icon orange"></div><div class="label">@T["Phép đã nghỉ"]:</div><div class="value">@(Model.SoPhepDaNghi.ToString("n2"))</div>
            </div>
            <div class="item">
                <div class="icon purple"></div><div class="label">@T["Phép tồn năm trước"]:</div><div class="value">@(Model.SoPhepChuyenTuNamTruoc.ToString("n2"))</div>
            </div>
            <div class="item">
                <div class="icon green"></div><div class="label">@T["Phép còn lại"]:</div><div class="value">@(Model.CalSoPhepConLai.ToString("n2"))</div>
            </div>
        </div>
    </div>

    <div class="sorting1__form">
        <div class="sorting1__wrap">
            <div class="sorting1__fieldset">
                <div class="videos__field mgr-6">
                    @(Html.DevExtreme().DateBox()
                        .ID("OvertimeStartDate")
                        .ShowClearButton(true)
                        .DisplayFormat("dd-MM-yyyy")
                        .Type(DateBoxType.Date)
                        .UseMaskBehavior(true)
                        .Value(DateTime.Now.AddMonths(-1))
                    )
                </div>

                <div class="videos__field mgr-6">
                    @(Html.DevExtreme().DateBox()
                        .ID("OvertimeEndDate")
                        .ShowClearButton(true)
                        .DisplayFormat("dd-MM-yyyy")
                        .Type(DateBoxType.Date)
                        .UseMaskBehavior(true)
                        .Value(DateTime.Now)
                    )
                </div>

                <div class="videos__field">
                    @(Html.DevExtreme().Button()
                        .ID("btnSearch")
                        .Text("Áp dụng")
                        .ElementAttr(new Dictionary<string, object>() {
                            { "class", "sorting1__btn group__btn btn dx-button-mode-contained dx-button-success" },
                            { "style", "padding-left: 3px;padding-right: 3px;height: 36px;" }
                        })
                        .Icon("search")
                        .OnClick(@<text>
                            function(data) {
                                console.log(1);
                                @*var dataGrid = $("#gridContainer").dxDataGrid("instance");
                                dataGrid.clearFilter();
                                dataGrid.option("headerFilter.visible", data.value);*@
                            }
                        </text>)
                    )
                </div>
            </div>
        </div>
        @*<button id="btnSearch" class="sorting1__btn btn btn_blue">Áp dụng</button>*@
    </div>
</div>

<div class="content-block">
    @(Html.DevExtreme().DataGrid<LeaveModel>()
        .ID("gridContainer")
        .DataSource(d => d.Mvc()
            .Controller("Leave")
            .LoadAction("Get")
            .Key("Id")
        )
        .ShowBorders(true)
        .ShowRowLines(true)
        .ColumnAutoWidth(true)
        .ColumnHidingEnabled(true)
        .Columns(columns => {
            columns.Add().Caption("No").Alignment(HorizontalAlignment.Center).CellTemplate(new JS("dataGrid_rowIndex_cellTemplate")).Width(80);
            columns.AddFor(m => m.LoaiNghi).Caption(T["Loại nghỉ"].Value);
            columns.Add().Caption(T["Thông tin chi tiết"].Value).CellTemplate(@<text>
                <div>@T["Từ ngày"]: <b><%- data.DateStartDisplay %></b> - @T["Đến ngày"]: <b><%- data.DateEndDisplay %></b></div>
                <div>@T["Tổng số ngày"]: <b><%- data.SoNgayNghi %></b></div>
                <div>@T["Diễn giải"]: <b><%- data.DienGiai %></b></div>
            </text>);
            columns.Add().Caption(T["Trạng thái"].Value).CellTemplate(new JS("cellTempApproveStatus")).Width(160);
            columns.AddFor(m => m.Approver).Caption(T["Người duyệt"].Value);
            columns.Add().Caption(T["#"].Value)
            .Type(GridCommandColumnType.Buttons)
            .Width(80)
            .Buttons(b =>
            {
                b.Add().Icon("edit").OnClick("jsEdit");
                b.Add().Icon("trash").OnClick("jsDelete");
            });
        })
        .Paging(p => p.PageSize(10))
        .Pager(p => p
            .Visible(true)
            .ShowPageSizeSelector(true)
            .AllowedPageSizes(new[] { 5, 10, 20 })
            .ShowInfo(true)
            .InfoText(new JS("gridInfoText"))
            .ShowNavigationButtons(true)
        )
    )
</div>
@(Html.DevExtreme().Popup()
    .ID("popup")
    //.Width(300)
    //.Height('auto')
    .ShowTitle(true)
    .Title("Đăng ký Nghỉ phép")
    .Visible(false)
    .DragEnabled(false)
    .CloseOnOutsideClick(true)
)